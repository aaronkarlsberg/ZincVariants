(function(prompt) { function showModal(html) { var div = document.createElement('div'); div.style = "z-index: 100000; background: white; position: absolute; border: 1px solid #ccc!important; top: 10px; left: 10%; width: 80%; padding: 20px; font-size: 16px;"; div.innerHTML = html; document.body.append(div); var backgroundDiv = document.createElement('div'); backgroundDiv.style = "z-index: 10000; background: white; opacity: 0.7; position: absolute; top:0; left:0; width:100%; height:100%;"; backgroundDiv.addEventListener('click', function (event) { backgroundDiv.style.display = "none"; div.style.display = "none"; }); document.body.append(backgroundDiv); window.scrollTo(0, 0); } function flatten(arr){ return [].concat.apply([], arr); } function cartesianProductOf(arr) { return arr.reduce(function(a, b) { return flatten(a.map(function(x) { return b.map(function(y) { return x.concat([y]); }); }), true); }, [ [] ]); } function setIntersect(arr){ return arr.reduce((acc,cur)=>acc.filter((x)=>cur.indexOf(x)!==-1), arr[0]||[]) } if (window.location.href.indexOf("walmart.com") > -1) { var state = null; try{ state = JSON.parse(document.querySelector('#yakpal-atf-content').innerText)["atf-content"] } catch(err){ console.log('could not get yakpal-atf-content') state = __WML_REDUX_INITIAL_STATE__ } if (Object.values(state.product.products).length == 1) { var pid = Object.values(state.product.products)[0].usItemId; prompt("Use this product id:", pid) } else { var variants =Object.values(state.product.variantCategoriesMap) .map(Object.values)[0]; variants = flatten(variants.map((i)=>i.variants)).map(Object.values) variants = cartesianProductOf(variants).map((combo)=>{ var alphaId = setIntersect(combo.map((x)=>x.products))[0]; if (alphaId) { var name = combo.map((x)=>x.id).toString(); var numId = state.product.products[alphaId].usItemId; return numId+": "+name; } }) var pidStr = variants.filter((x)=>x).join('
'); showModal("We are unable to determine which variant is selected. Here are the item IDs for all variants:
"+pidStr); } } else if (window.location.href.indexOf("amazon") > -1) { if (!window.twisterController) { prompt("Use this ASIN to order via Zinc:", window.ue_pti) } else { var ddm = twisterController.twisterModel.viewHandle.dimensionDisplayTypeMap; var dimvals = twisterController.twisterVariationsData.dimensionValuesDisplay[twisterController.twisterModel.twisterState.currentASIN]; var mmap = ""; for (var i = 0; i < ddm.length; i++) { mmap += (" " + ddm[i] + ": " + dimvals[i] + "\n"); }; mmap += "\n"; prompt("Selected product variant is\n" + mmap + "Use this ASIN to order via Zinc:", twisterController.twisterModel.twisterState.currentASIN); } } else if (window.location.href.indexOf("aliexpress") > -1) { var map = function(arr, func) { return Array.prototype.map.call(arr, func); }; var pid = window.location.href.toString().match(/(\d{5,15})\.html/)[1]; var variants = document.getElementsByClassName('sku-attr-list'); variants = map(variants, function(ele) { return ele && ele.getElementsByClassName('active')[0] }); variants = map(variants, function(ele) { return ele && ele.getElementsByTagName("a")[0] }); var variantText = map(variants, function(ele) { return ele && (ele.textContent || ele.getAttribute('title')) }); var variantIds = map(variants, function(ele) { return ele && ele.getAttribute('data-sku-id') }); console.log(variants) if (variants.length === 0) { prompt("Use this product id:", pid) } else if (variantIds.length !== variantIds.filter(function(x) { return x; }).length) { window.alert("This product has variants (for example color options). Select a value for each variant option.") } else { var sanityCheck = window.skuProducts && window.skuProducts.filter(function(i) { return i.skuPropIds == variantIds.join(","); }) if (sanityCheck && !sanityCheck[0]) { window.alert("There was an error grabbing the product id. Please email email support with your current url.") } variantIds.unshift(pid) prompt("You have selected the " + variantText.join(" ") + " variant.\nUse this product id:", variantIds.join("-")) } } else if (window.location.href.indexOf("overstock") > -1) { var pid = (window.location.toString().match(/overstock\.com\/.*?\/.*?\/(\d+)/i) || [])[1] var optionSelector = document.querySelector('select.options-dropdown'); if (!pid){ window.alert("There was an error grabbing the product id. Please email email support with your current url."); } else if(optionSelector && optionSelector.value){ prompt("Use this product id:", pid + "-" + optionSelector.value); } else if(optionSelector && !optionSelector.value){ window.alert("This product has variants (for example color options). Select a variant.") } else { prompt("Use this product id:", pid); } } else if (window.location.href.indexOf("bestbuy.com") > -1) { var pid = (/\/(\d+)\.p?/gi).exec(location.href.toString())[1] prompt("Use this product id:", pid) } else if (window.location.href.indexOf("sears.com") > -1) { var pid = (/p-([a-z0-9]+P)/gi).exec(location.href.toString())[1] var ran = false; require('chaplin').mediator.on('productoffers:model:singleOffer:success',function(){ if(ran) return; ran = true; var variant = arguments[0].attributes.singleOffer; if (variant+"P" == pid || !(/\d+/).test(variant)){ prompt("Use this product id:", pid); } else { prompt("Use this product id:", pid+"-"+variant); } }) require('chaplin').mediator.publish('productoffers:model:loadSingleOffer') //make it call us! } else if (window.location.href.indexOf("costco.com") > -1){ var sels = [0,1,2,3,4,5,6,7,8,9].map((i)=>$('#ProductForm')[0]['productOption0' + i]).filter((x)=>x).map((x)=>x.value); if(sels.indexOf("unselected")!==-1){ window.alert("This product has variants (for example color options). Select a value for each variant option.") } else if (sels.length) { var selectedVariants = sels.map((vid, i)=>options[0][i].v[vid]); var zigguratProductId = rrData.productId + '-' + products[0].filter((x)=>x.options.slice(0).sort().toString() === sels.slice(0).sort().toString())[0].partNumber; prompt("Use this product id:", zigguratProductId); } else { prompt("Use this product id:", rrData.productId); } } })(window.variantCallback || window.prompt);